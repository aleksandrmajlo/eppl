<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>Modification category</name>
    <code>eppcat</code>
    <version>1.0</version>
    <author>OpenCart Ltd</author>
    <link>http://www.opencart.com</link>


    <file path="catalog/model/catalog/category.php">
        <operation>
            <search>
                <![CDATA[public function getTotalCategoriesByCategoryId($parent_id = 0) {]]>
            </search>
            <add position="before">
                <![CDATA[
	public function getTotalProductsByCategoryId($parent_id = 0) {
        $num_products = $this->db->query("select * from  " . DB_PREFIX . "product_to_category p2c left join  " . DB_PREFIX . "product p on p2c.product_id = p.product_id where p.status = '1' and p2c.category_id = '" . (int)$parent_id . "'");
		return $num_products->num_rows;
	}
	             ]]>
            </add>
        </operation>
    </file>


    <file path="catalog/controller/product/category.php">
        <operation>
            <search>
                <![CDATA[$category_info = $this->model_catalog_category->getCategory($category_id);]]>
            </search>
            <add position="before">
                <![CDATA[
                $data['totalProduct'] = $this->model_catalog_category->getTotalProductsByCategoryId($category_id);
	             ]]>
            </add>
        </operation>
    </file>


    <file path="catalog/controller/product/category.php">
        <operation>
            <search>
                <![CDATA[$data['categories'][] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
                if ($result['image']) {
                    $image = $this->model_tool_image->resize($result['image'], 100, 150);
                } else {
                    $image = "";
                }
	             ]]>
            </add>
        </operation>
    </file>

    <file path="catalog/controller/product/category.php">
        <operation>
            <search>
                <![CDATA[$data['categories'][] = array(]]>
            </search>
            <add position="after">
                <![CDATA[
                    'thumd'=>$image,
	             ]]>
            </add>
        </operation>
    </file>


    <file path="catalog/controller/product/category.php">
        <operation>
            <search>
                <![CDATA[$data['products'][] = array(]]>
            </search>
            <add position="before">
                <![CDATA[
                 //*********************************************************
                $data['cartLink'] = $this->url->link('checkout/cart');

				// сам продукт параметры
                $Colir_Array=['color'=>[],'array'=>[],'size'=>[]];
                $product_attribute_group_query = $this->db->query("SELECT ag.attribute_group_id, agd.name FROM " . DB_PREFIX . "product_attribute pa LEFT JOIN " . DB_PREFIX . "attribute a ON (pa.attribute_id = a.attribute_id) LEFT JOIN " . DB_PREFIX . "attribute_group ag ON (a.attribute_group_id = ag.attribute_group_id) LEFT JOIN " . DB_PREFIX . "attribute_group_description agd ON (ag.attribute_group_id = agd.attribute_group_id) WHERE pa.product_id = '" . (int)$result['product_id'] . "' AND agd.language_id = '" . (int)$this->config->get('config_language_id') . "' GROUP BY ag.attribute_group_id ORDER BY ag.sort_order, agd.name");
                foreach ($product_attribute_group_query->rows as $product_attribute_group) {
                    if($product_attribute_group["attribute_group_id"]=="1"){
                        $product_attribute_query = $this->db->query("SELECT a.attribute_id, ad.name, pa.text FROM " . DB_PREFIX . "product_attribute pa LEFT JOIN " . DB_PREFIX . "attribute a ON (pa.attribute_id = a.attribute_id) LEFT JOIN " . DB_PREFIX . "attribute_description ad ON (a.attribute_id = ad.attribute_id) WHERE pa.product_id = '" . (int)$result['product_id'] . "' AND a.attribute_group_id = '" . (int)$product_attribute_group['attribute_group_id'] . "' AND ad.language_id = '" . (int)$this->config->get('config_language_id') . "' AND pa.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY a.sort_order, ad.name");
                        foreach ($product_attribute_query->rows as $product_attribute) {
                            if($product_attribute['attribute_id']=="11"){
                                $Colir_Array['color']=$product_attribute["text"];
                            }

                            if($product_attribute['attribute_id']=="12"){
                                $Colir_Array['array'][] =[
                                    'array'=>$product_attribute["text"],
                                    'href'=>false,
                                    'number'=>(int)$product_attribute["text"]
                                ];
                            }

                            if($product_attribute['attribute_id']=="13"){
                                $Colir_Array['size'][] =[
                                    'array'=>$product_attribute["text"],
                                    'href'=>false,
                                    'number'=>(int)$product_attribute["text"]
                                ];
                            }

                        }
                    }
                }

                // по цвету старт
                $Tresults = $this->model_catalog_product->getProductRelatedColor($result['product_id']);
                $color_products=[];
                foreach ($Tresults as $Tresult){
                    $product_attribute_query = $this->db->query("SELECT a.attribute_id, ad.name, pa.text FROM " . DB_PREFIX . "product_attribute pa LEFT JOIN " . DB_PREFIX . "attribute a ON (pa.attribute_id = a.attribute_id) LEFT JOIN " . DB_PREFIX . "attribute_description ad ON (a.attribute_id = ad.attribute_id) WHERE pa.product_id = '" . (int)$Tresult['product_id'] . "' AND a.attribute_group_id = '" . 1 . "' AND ad.language_id = '" . (int)$this->config->get('config_language_id') . "' AND pa.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY a.sort_order, ad.name");
                    $color="";
                    foreach ($product_attribute_query->rows as $product_attribute) {
                        if($product_attribute['attribute_id']=="11"){
                            $color=$product_attribute["text"];
                            break;
                        }
                    }
                    $color_products[]=[
                        "color"=>$color,
                        'href'        => $this->url->link('product/product', 'product_id=' . $Tresult['product_id'])
                    ];
                }
                // по цвету end


                // по накопителю start
                $Tresults = $this->model_catalog_product->getProductRelatedArray($result['product_id']);
                $array_products=[];
                foreach ($Tresults as $Tresult){
                    $product_attribute_query = $this->db->query("SELECT a.attribute_id, ad.name, pa.text FROM " . DB_PREFIX . "product_attribute pa LEFT JOIN " . DB_PREFIX . "attribute a ON (pa.attribute_id = a.attribute_id) LEFT JOIN " . DB_PREFIX . "attribute_description ad ON (a.attribute_id = ad.attribute_id) WHERE pa.product_id = '" . (int)$Tresult['product_id'] . "' AND a.attribute_group_id = '" . 1 . "' AND ad.language_id = '" . (int)$this->config->get('config_language_id') . "' AND pa.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY a.sort_order, ad.name");
                    $array="";
                    foreach ($product_attribute_query->rows as $product_attribute) {
                        if($product_attribute['attribute_id']=="12"){
                            $array=$product_attribute["text"];
                            break;
                        }
                    }
                    $array_products[] = [
                        "array" => $array,
                        'href' => $this->url->link('product/product', 'product_id=' . $Tresult['product_id']),
                        'number'=>(int)$array,

                    ];
                }
                $resulArray = array_merge($Colir_Array['array'], $array_products);
                $resulArrayColumn = array_column($resulArray, 'number');
                array_multisort($resulArrayColumn, SORT_ASC, $resulArray);
                // по накопителю end

                // по размеру start
                $Tresults = $this->model_catalog_product->getProductRelatedSize($result['product_id']);
                $size_products=[];
                foreach ($Tresults as $Tresult){
                    $product_attribute_query = $this->db->query("SELECT a.attribute_id, ad.name, pa.text FROM " . DB_PREFIX . "product_attribute pa LEFT JOIN " . DB_PREFIX . "attribute a ON (pa.attribute_id = a.attribute_id) LEFT JOIN " . DB_PREFIX . "attribute_description ad ON (a.attribute_id = ad.attribute_id) WHERE pa.product_id = '" . (int)$Tresult['product_id'] . "' AND a.attribute_group_id = '" . 1 . "' AND ad.language_id = '" . (int)$this->config->get('config_language_id') . "' AND pa.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY a.sort_order, ad.name");
                    $array="";
                    foreach ($product_attribute_query->rows as $product_attribute) {
                        if($product_attribute['attribute_id']=="13"){
                            $array=$product_attribute["text"];
                            break;
                        }
                    }
                    $size_products[] = [
                        "array" => $array,
                        'href' => $this->url->link('product/product', 'product_id=' . $Tresult['product_id']),
                        'number'=>(int)$array,

                    ];
                }
                $resulSize = array_merge($Colir_Array['size'], $size_products);
                $resulSizeColumn = array_column($resulSize, 'number');
                array_multisort($resulSizeColumn, SORT_ASC, $resulSize);
                // по размеру end


                //*********************************************************
	             ]]>
            </add>
        </operation>
    </file>

    <file path="catalog/controller/product/category.php">
        <operation>
            <search>
                <![CDATA['product_id'  => $result['product_id'],]]>
            </search>
            <add position="after">
                <![CDATA[
                    'size_products' => $resulSize,
                    'array_products' => $resulArray,
                    'color_products'=>$color_products,
                    'Colir_Array'=>$Colir_Array,
	             ]]>
            </add>
        </operation>
    </file>

    <file path="catalog/controller/product/category.php">
        <operation>
            <search>
                <![CDATA[$image = $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));]]>
            </search>
            <add position="replace">
                <![CDATA[
                     $image = '/image/'.$result['image'];
	             ]]>
            </add>
        </operation>
    </file>

</modification>